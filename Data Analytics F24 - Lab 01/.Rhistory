install.packages("MASS")
EPI_data <- read.csv("C:\Users\Mike\Documents\RPI\Fall 2024\Data Analytics\Data Analytics F24 - Lab 01")
EPI_data <- read.csv("epi2024results06022024.csv")
EPI_data <- read.csv("C:\Users\Mike\Documents\RPI\Fall 2024\Data Analytics\Data Analytics F24 - Lab 01\epi2024results06022024.csv")
EPI_data <- read.csv("epi2024results06022024.csv")
attach(EPI_data)
attach(EPI_data)
View(EPI_data)
EPI_data <- read.csv("/epi2024results06022024.csv")
EPI_data <- read.csv("epi2024results06022024.csv")
print(EPI_data)
EPI_data <- read.csv("epi2024results06022024.csv", sep="\t")
EPI_data <- read.csv("epi2024results06022024.csv")
print(EPI_data)
EPI_data <- read.csv("C:/Users/Mike/Documents/RPI/Fall 2024/Data Analytics/Data Analytics F24 - Lab 01/epi2024results06022024.csv")
View(EPI_data)
attach(EPI_data)
fix(EPI_data)
tf <- is.na(EPI.new) #records True values if value is NA
fix(EPI_data)
tf <- is.na(EPI.new) #records True values if value is NA
fix(EPI_data)
View(tf)
summary(EPI.new) #stats
EPI_data_csv <- read.csv("C:/Users/Mike/Documents/RPI/Fall 2024/Data Analytics/Data Analytics F24 - Lab 01/epi2024results06022024.csv")
attach(EPI_data_xlsx)
EPI_data_xlsx <- read_excel("C:/Users/Mike/Documents/RPI/Fall 2024/Data Analytics/Data Analytics F24 - Lab 01/epi_2024_results_DAF24.xlsx")
EPI_data_xlsx <- read_excel("C:/Users/Mike/Documents/RPI/Fall 2024/Data Analytics/Data Analytics F24 - Lab 01/epi_2024_results_DAF24.xlsx")
library(readx1)
install.packages("readx1")
install.packages("tidyverse")
library(readx1)
library(readx1)
View(EPI_data_csv)
summary(EPI.new) #stats
View(EPI_data)
View(EPI_data_csv)
library(readx1)
EPI_data_csv <- read.csv("C:/Users/Mike/Documents/RPI/Fall 2024/Data Analytics/Data Analytics F24 - Lab 01/epi2024results06022024.csv")
EPI_data_xlsx <- read_excel("C:/Users/Mike/Documents/RPI/Fall 2024/Data Analytics/Data Analytics F24 - Lab 01/epi_2024_results_DAF24.xlsx")
EPI_data_csv <- read.csv("C:/Users/Mike/Documents/RPI/Fall 2024/Data Analytics/Data Analytics F24 - Lab 01/epi2024results06022024.csv")
attach(EPI_data_csv)
View(EPI_data_csv)
tf <- is.na(EPI.new) #records True values if value is NA
E <- EPI.new[!tf] #filters out NA values, new array
summary(EPI.new) #stats
EPI_data_csv <- read.csv("C:/Users/Mike/Documents/RPI/Fall 2024/Data Analytics/Data Analytics F24 - Lab 01/epi2024results06022024.csv")
attach(EPI_data_csv)
View(EPI_data_csv)
tf <- is.na(EPI.new) #records True values if value is NA
E <- EPI.new[!tf] #filters out NA values, new array
summary(EPI.new) #stats
View(EPI_data_csv)
View(EPI_data_csv)
summary(EPI.new) #stats
fivenum(EPI.new, na.rm=TRUE)
hist(EPI.new)
hist(EPI.new, seq(20.,80.,1.0), prob=TRUE)
lines(density(EPI.new, na.rm=TRUE, bw=1.))
lines(density(EPI.new, na.rm=TRUE, SJ=1.))
lines(density(EPI.new, na.rm=TRUE, bw=1.))
rug(EPI.new)
summary(EPI.new) #stats
fivenum(EPI.new, na.rm=TRUE)
stem(EPI.new)#stem and leaf plot
hist(EPI.new)
hist(EPI.new, seq(20.,80.,1.0), prob=TRUE)
#lines(density(EPI.new, na.rm=TRUE, bw=1.))
rug(EPI.new)
lines(density(EPI.new, na.rm=TRUE, bw=1.))
rug(EPI.new)
help(stem)
View(EPI_data)
View(EPI_data_csv)
View(EPI_data)
setwd("C:/Users/Mike/Documents/RPI/Fall 2024/Data Analytics/Data Analytics F24 - Lab 01")
EPI_data_csv <- read.csv("epi2024results06022024.csv")
attach(EPI_data_csv)
View(EPI_data_csv)
tf <- is.na(EPI.new) #records True values if value is NA
E <- EPI.new[!tf] #filters out NA values, new array
summary(EPI.new) #stats
fivenum(EPI.new, na.rm=TRUE)
stem(EPI.new)#stem and leaf plot
hist(EPI.new)
hist(EPI.new, seq(20.,80.,1.0), prob=TRUE)
lines(density(EPI.new, na.rm=TRUE, bw=1.))
rug(EPI.new)
#comparing distributions
boxplot(EPI.new, APO.new)
setwd("C:/Users/Mike/Documents/RPI/Fall 2024/Data Analytics/Data Analytics F24 - Lab 01")
EPI_data_csv <- read.csv("epi2024results06022024.csv", col.names = TRUE)
EPI_data_csv <- read.csv("epi2024results06022024.csv", col_names = TRUE)
EPI_data_csv <- read.csv("epi2024results06022024.csv", header = TRUE)
attach(EPI_data_csv)
View(EPI_data_csv)
tf <- is.na(EPI.new) #records True values if value is NA
E <- EPI.new[!tf] #filters out NA values, new array
summary(EPI.new) #stats
fivenum(EPI.new, na.rm=TRUE)
stem(EPI.new)#stem and leaf plot
hist(EPI.new)
hist(EPI.new, seq(20.,80.,1.0), prob=TRUE)
lines(density(EPI.new, na.rm=TRUE, bw=1.))
rug(EPI.new)
#comparing distributions
boxplot(EPI.new, APO.new)
#comparing distributions
label = c("EPI", "APO")
boxplot(EPI.new, APO.new, names=label)
setwd("C:/Users/Mike/Documents/RPI/Fall 2024/Data Analytics/Data Analytics F24 - Lab 01")
EPI_data_csv <- read.csv("epi2024results06022024.csv", header = TRUE)
attach(EPI_data_csv)
View(EPI_data_csv)
tf <- is.na(EPI.new) #records True values if value is NA
E <- EPI.new[!tf] #filters out NA values, new array
summary(EPI.new) #stats
fivenum(EPI.new, na.rm=TRUE)
stem(EPI.new)#stem and leaf plot
hist(EPI.new)
hist(EPI.new, seq(20.,80.,1.0), prob=TRUE)
lines(density(EPI.new, na.rm=TRUE, bw=1.))
rug(EPI.new)
#comparing distributions
label = c("EPI", "APO")
boxplot(EPI.new, APO.new, names=label)
hist(EPI.new, seq(20., 80., 1.0), prob=TRUE)
lines(density(EPI.new, na.rm=TRUE, bw-1.))
lines(density(EPI.new, na.rm=TRUE, bw=1.))
rug(EPI.new)
lines(density(EPI.new, na.rm=TRUE, bw="SJ"))
hist(EPI.new, seq(20., 80., 1.0), prob=TRUE)
lines(density(EPI.new, na.rm=TRUE, bw="SJ"))
rug(EPI.new)
x <- seq(20,80,1)
q <- dnorm(x, mean=42, sd=5, log=FALSE)
lines(x,q)
lines(x, .4*q)
ln <- dnorm(xn, mean=65, sd=5, log=FALSE)
plot(ecdf(EPI.new), do.points=FALSE, verticals=TRUE)
qqnorm(EPI.new)
qqline(EPI.new)
##Q-Q plot
qqplot(rnorm(ppoints(250), df=5), EPI.new, xlab = "Q-Q plot for norm dsn")
##Q-Q plot
qqplot(rnorm(ppoints(250)), EPI.new, xlab = "Q-Q plot for norm dsn")
qqline(EPI.new)
#Q-Q plot against t dst
qqplot(rt(ppoints(250)), EPI.new, xlab = "Q-Q plot for t dsn")
#Q-Q plot against t dst
qqplot(rt(ppoints(250), df=5), EPI.new, xlab = "Q-Q plot for t dsn")
qqline(EPI.new)
plot(ecdf(APO.new), do.points=FALSE, verticals=TRUE)
#quantile-quantile
qqnorm(APO.new)
qqline(APO.new)
##Q-Q plot against norm dst
qqplot(rnorm(ppoints(250)), APO.new, xlab = "Q-Q plot for norm dsn")
qqline(APO.new)
#Q-Q plot against t dst
qqplot(rt(ppoints(250), df=5), APO.new, xlab = "Q-Q plot for t dsn")
qqline(APO.new)
