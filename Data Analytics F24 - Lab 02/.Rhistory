install.packages("MASS")
#Linear Model in R
lin.mod.epinew <- lm(EPI.new~population_log,epi_results.sub)
setwd("C:/Users/Mike/Documents/RPI/Fall 2024/DataAnalyticsLabs/Data Analytics F24 - Lab 02")
populations_2023 <- read.csv("countries_populations_2023.csv", header = TRUE)
epi_results <- read.csv("epi2024results06022024.csv", header = TRUE)
epi_weights <- read.csv("epi2024weights.csv", header = TRUE)
attach(epi_weights)
qqnorm(EPI.new)
qqline(EPI.new)
# Q-Q plot against the generating distribution
x <- seq(20., 80., 1.0)
qqplot(qnorm(ppoints(200)), x)
qqline(x)
qqplot(qnorm(ppoints(200)), EPI.new)
qqline(EPI.new)
#Cumulative Density Function
plot(ecdf(EPI.new), do.points=FALSE)
plot(ecdf(rnorm(1000,45,10)), do.points=FALSE) # ecdf of normal distr with mean=45, sd= 10
lines(ecdf(EPI.new))
#same exploration with ECO and SPI
qqnorm(ECO.new)
qqline(ECO.new)
qqnorm(SPI.new)
qqline(SPI.new)
# Q-Q plot against the generating distribution ECO and SPI
qqplot(qnorm(ppoints(200)), ECO.new)
qqline(ECO.new)
attach(epi_weights)
setwd("C:/Users/Mike/Documents/RPI/Fall 2024/DataAnalyticsLabs/Data Analytics F24 - Lab 02")
populations_2023 <- read.csv("countries_populations_2023.csv", header = TRUE)
epi_results <- read.csv("epi2024results06022024.csv", header = TRUE)
epi_weights <- read.csv("epi2024weights.csv", header = TRUE)
attach(epi_weights)
qqnorm(EPI.new)
setwd("C:/Users/Mike/Documents/RPI/Fall 2024/DataAnalyticsLabs/Data Analytics F24 - Lab 02")
populations_2023 <- read.csv("countries_populations_2023.csv", header = TRUE)
epi_results <- read.csv("epi2024results06022024.csv", header = TRUE)
epi_weights <- read.csv("epi2024weights.csv", header = TRUE)
attach(epi_results)
qqnorm(EPI.new)
qqline(EPI.new)
# Q-Q plot against the generating distribution
x <- seq(20., 80., 1.0)
# Q-Q plot against the generating distribution
x <- seq(20., 80., 1.0)
qqplot(qnorm(ppoints(200)), x)
qqline(x)
qqplot(qnorm(ppoints(200)), EPI.new)
qqline(EPI.new)
#Cumulative Density Function
plot(ecdf(EPI.new), do.points=FALSE)
plot(ecdf(rnorm(1000,45,10)), do.points=FALSE) # ecdf of normal distr with mean=45, sd= 10
lines(ecdf(EPI.new))
#same exploration with ECO and SPI
qqnorm(ECO.new)
qqline(ECO.new)
qqnorm(SPI.new)
qqline(SPI.new)
# Q-Q plot against the generating distribution ECO and SPI
qqplot(qnorm(ppoints(200)), ECO.new)
qqline(ECO.new)
qqplot(qnorm(ppoints(200)), SPI.new)
qqline(SPI.new)
#Cumulative Density Function with ECO and SPI
plot(ecdf(ECO.new), do.points=FALSE)
plot(ecdf(rnorm(1000,45,10)), do.points=FALSE) # ecdf of normal distr with mean=45, sd= 10
lines(ecdf(ECO.new))
plot(ecdf(SPI.new), do.points=FALSE)
plot(ecdf(rnorm(1000,45,10)), do.points=FALSE) # ecdf of normal distr with mean=45, sd= 10
lines(ecdf(SPI.new))
#tried against qchisq but idk if right
plot(ecdf(SPI.new), do.points=FALSE)
plot(ecdf(qchisq(qnorm(ppoints(200)), df=3)), do.points=FALSE) # ecdf of normal distr with mean=45, sd= 10
lines(ecdf(SPI.new))
boxplot(EPI.old, EPI.new, names=c("EPI.old", "EPI.new"))
plot(ecdf(EPI.old), do.points=FALSE, main="EPI.old vs. EPI.new ECDF")
lines(ecdf(EPI.new))
#drop countries not in epi results
populations <- populations_2023[-which(!populations_2023$Country %in% epi_results$country),]
#sort populations by country
populations <- populations[order(populations$Country),]
#drop countries not in populations
epi_results.sub <- epi_results[-which(!epi_results$country %in% populations$Country),]
#sort epi results by country
epi_results.sub <- epi_results.sub[order(epi_results.sub$country),]
#only keep necessary columns
epi_results.sub <- epi_results.sub[, c("country", "EPI.old", "EPI.new")]
#convert population to numberic
epi_results.sub$population <- as.numeric(populations$Population)
#compute population log base 10
epi_results.sub$population_log <- log10(epi_results.sub$population)
#Linear Model in R
lin.mod.epinew <- lm(EPI.new~population_log,epi_results.sub)
plot(EPI.new~population_log)
abline(lin.mod.epinew)
#Linear Model in R
lin.mod.epinew <- lm(EPI.new~population_log,epi_results.sub)
plot(EPI.new~population_log)
#Linear Model in R
lin.mod.epinew <- lm(EPI.new~population_log,epi_results.sub)
EPI.new~population_log
plot(EPI.new~population_log)
View(EPI.new~population_log)
View(EPI.new)
View(EPI)
View(epi_results)
View(epi_results.sub)
attach(epi_results.sub)
#Linear Model in R
lin.mod.epinew <- lm(EPI.new~population_log,epi_results.sub)
plot(EPI.new~population_log)
abline(lin.mod.epinew)
summary(lin.mod.epinew)
plot(lin.mod.epinew)
ggplot(epi.results.sub, aes(x = population_log, y = EPI.new)) +
geom_point() +
stat_smooth(method = "lm")
library(ggplot2)
ggplot(epi.results.sub, aes(x = population_log, y = EPI.new)) +
geom_point() +
stat_smooth(method = "lm")
ggplot(epi_results.sub, aes(x = population_log, y = EPI.new)) +
geom_point() +
stat_smooth(method = "lm")
ggplot(lin.mod.epinew, aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0) +
labs(title='Residual vs. Fitted Values Plot', x='Fitted Values', y='Residuals')
View(epi_results.sub)
#drop countries not in epi results
populations <- populations_2023[-which(!populations_2023$Country %in% epi_results$country),]
#sort populations by country
populations <- populations[order(populations$Country),]
#drop countries not in populations
epi_results.sub <- epi_results[-which(!epi_results$country %in% populations$Country),]
#sort epi results by country
epi_results.sub <- epi_results.sub[order(epi_results.sub$country),]
#only keep necessary columns
epi_results.sub <- epi_results.sub[, c("country", "EPI.old", "EPI.new", "ECO.old", "ECO.new")]
#convert population to numberic
epi_results.sub$population <- as.numeric(populations$Population)
#compute population log base 10
epi_results.sub$population_log <- log10(epi_results.sub$population)
attach(epi_results.sub)
#try with ECO variable
lin.mod.epinew <- lm(ECO.new~population_log,epi_results.sub)
ggplot(epi_results.sub, aes(x = population_log, y = ECO.new)) +
geom_point() +
stat_smooth(method = "lm")
ggplot(lin.mod.epinew, aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0) +
labs(title='Residual vs. Fitted Values Plot', x='Fitted Values', y='Residuals')
